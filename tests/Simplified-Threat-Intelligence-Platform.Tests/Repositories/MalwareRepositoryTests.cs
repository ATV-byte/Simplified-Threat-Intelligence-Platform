using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using MongoDB.Bson;
using MongoDB.Driver;
using Moq;
using Simplified_Threat_Intelligence_Platform.Repositories;
using Xunit;

namespace Simplified_Threat_Intelligence_Platform.Tests.Repositories
{
    public class MalwareRepositoryTests
    {
        [Fact]
        public async Task InsertAsync_ShouldInsertDocumentAndReturnId()
        {
            var collectionMock = new Mock<IMongoCollection<BsonDocument>>();
            var dbMock = new Mock<IMongoDatabase>();
            dbMock.Setup(d => d.GetCollection<BsonDocument>("malware", null))
                  .Returns(collectionMock.Object);

            var repo = new MalwareRepository(dbMock.Object);

            var doc = new BsonDocument { { "_id", ObjectId.GenerateNewId() }, { "name", "malware" } };

            var id = await repo.InsertAsync(doc);

            collectionMock.Verify(c => c.InsertOneAsync(doc, null, default), Times.Once);
            Assert.Equal(doc["_id"].ToString(), id);
        }

    }
}